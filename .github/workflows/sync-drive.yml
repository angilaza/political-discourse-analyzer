name: Sync to Google Drive

on:
  push:
    branches:
      - main  # Se ejecutará cada vez que haya un push a la rama main
  schedule:
    - cron: '0 12 * * *'  # Se ejecutará automáticamente todos los días a las 12:00 UTC

jobs:
  upload:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          pip install gspread google-auth google-auth-oauthlib google-auth-httplib2 google-api-python-client

      - name: Create Google Drive Upload Script
        run: |
          echo "from google.oauth2.service_account import Credentials
          from googleapiclient.discovery import build
          from googleapiclient.http import MediaFileUpload
          import os
          import json

          SCOPES = ['https://www.googleapis.com/auth/drive']
          creds_json = os.environ.get('GDRIVE_CREDENTIALS')

          if not creds_json:
              raise Exception('GDRIVE_CREDENTIALS no está definido')

          creds = Credentials.from_service_account_info(json.loads(creds_json), scopes=SCOPES)
          service = build('drive', 'v3', credentials=creds)

          folder_id = '1DPYh6fza2995GHNd8xZy_K5BBtHELbZg'

          # Función para borrar contenido de una carpeta en Google Drive
          def clear_drive_folder(service, folder_id):
              query = f\"'{folder_id}' in parents\"
              results = service.files().list(q=query, fields='files(id, name)').execute()
              files = results.get('files', [])
              for file in files:
                  service.files().delete(fileId=file['id']).execute()
                  print(f'Borrado: {file["name"]}')

          # Función para subir contenido a Google Drive
          def upload_to_drive(local_path, parent_folder_id):
              for root, dirs, files in os.walk(local_path):
                  for file in files:
                      file_path = os.path.join(root, file)
                      file_metadata = {'name': file, 'parents': [parent_folder_id]}
                      media = MediaFileUpload(file_path, resumable=True)
                      service.files().create(body=file_metadata, media_body=media).execute()
                      print(f'Subido: {file_path}')

          # Borrar contenido existente en la carpeta de Google Drive
          clear_drive_folder(service, folder_id)

          # Subir archivos actualizados
          upload_to_drive('.', folder_id)

          print('Sincronización completa con Google Drive')" > upload.py

      - name: Upload files to Google Drive
        env:
          GDRIVE_CREDENTIALS: ${{ secrets.GDRIVE_CREDENTIALS }}
        run: python upload.py

